            CONTROL ASIS
 /*  TITLE:       RESEQ  LABEL NUMBERS FOR MANUALS LABELS
 /*  USERS:       SYSTECH -- D.MCR, OR MANUAL LIBRARIAN
 /*  CONTRIBUTED: 1988/12/01 DAVID MCRITCHIE
 /*
 /*  EXAMPLE:     MANRLAB .A .B BEGIN(3301) INCR(4)
ISREDIT     MACRO (TOK1,TOK2,TOK3,TOK4,TOK5,TOK6,TOK7,TOK8,TOK9,TOK10,TOK11,TOK1
          TOK14,TOK15,TOK16,TOK17,TOK18,TOK19,TOK20,TOK21,TOK22,TOK23,TOK24,TOK2
          TOK27,TOK28,TOK29,TOK30,TOK31,TOK32,TOK33,TOK34,TOK35,TOK36,TOK37,TOK3
          TOK40,TOK41,TOK42,TOK43,TOK44,TOK45,TOK46,TOK47,TOK48)
        SET DCTL = +
          &STR(TOK1,TOK2,TOK3,TOK4,TOK5,TOK6,TOK7,TOK8,TOK9,TOK10,TOK11,TOK12,TO
          TOK14,TOK15,TOK16,TOK17,TOK18,TOK19,TOK20,TOK21,TOK22,TOK23,TOK24,TOK2
          TOK27,TOK28,TOK29,TOK30,TOK31,TOK32,TOK33,TOK34,TOK35,TOK36,TOK37,TOK3
          TOK40,TOK41,TOK42,TOK43,TOK44,TOK45,TOK46,TOK47,TOK48)
        SET ECTL = &STR(**ERROR** ATTEMPTING TO USE  ==> MANRLAB )&SUBSTR(1:23,&
        SET INCR = 1
        SET INCRX = 0
        SET N0 = 20
        SET N  = 0
        SET I = 0
        SET LP = &STR((
        SET BLANKS = &STR(                                     )
        /*********
        SET I = 1
       DO WHILE &I <= 48
        SET TOKEN = &&TOK&I
        SET TOKEN = &STR(&SYSCAPS(&TOKEN))
        IF DEBUG = &DEBUG THEN WRITE  &I  TOK&&I=&&TOK&I  TOKEN=&TOKEN
        IF &STR(&TOKEN) = &STR() THEN GOTO END_TOK
        IF ALL = &STR(&TOKEN) | NEXT = &STR(&TOKEN) | FIRST = &STR(&TOKEN) | LAS
          SET &ZEDSMSG = &STR(&TOKEN INVALID)
          SET &ZEDLMSG = &STR("&TOKEN" NOT PROVIDED FOR NOR ARE NEXT ALL FIRST L
          ISPEXEC   SETMSG MSG(ISRZ000)
          EXIT CODE(12)
        END
        IF HELP = &STR(&TOKEN) | DEBUG = &STR(&TOKEN) -
           | NX   = &STR(&TOKEN) | X     = &STR(&TOKEN) -
           | AST  = &STR(&TOKEN) -
           | ENTIRE = &STR(&TOKEN) -
           | REPEATX = &STR(&TOKEN) -
           | FORCE  = &STR(&TOKEN) -
           THEN DO
             SET &&TOKEN.    = &STR(&TOKEN)
             IF DEBUG = &DEBUG THEN WRITE  &I  TOK&I=&TOK&&I  TOKEN=&TOKEN
             GOTO NXT_TOK
           END
        IF &SUBSTR(1:5,&STR(&TOKEN)       ) = &STR(INCR&STR(&LP))  THEN DO
           SET INCR   = &SUBSTR(6:&EVAL(&LENGTH(&STR(&TOKEN))-1),&STR(&TOKEN)
           GOTO NXT_TOK
        END
        IF &SUBSTR(1:4,&STR(&TOKEN)       ) = &STR(ADD&STR(&LP))  THEN DO
           SET ADD   = &SUBSTR(5:&EVAL(&LENGTH(&STR(&TOKEN))-1),&STR(&TOKEN)
           GOTO NXT_TOK
        END
        IF &SUBSTR(1:4,&STR(&TOKEN)       ) = &STR(COL&STR(&LP))  THEN DO
           SET COL   = &SUBSTR(5:&EVAL(&LENGTH(&STR(&TOKEN))-1),&STR(&TOKEN)
           GOTO NXT_TOK
        END
        IF &SUBSTR(1:6,&STR(&TOKEN)       ) = &STR(BEGIN&STR(&LP))  THEN DO
           SET BEGIN   = &SUBSTR(7:&EVAL(&LENGTH(&STR(&TOKEN))-1),&STR(&TOKEN)
           GOTO NXT_TOK
        END
        IF &SUBSTR(1:2,&STR(&TOKEN)       ) = &STR(L&STR(&LP))  THEN DO
           SET L     = &SUBSTR(3:&EVAL(&LENGTH(&STR(&TOKEN))-1),&STR(&TOKEN)
           GOTO NXT_TOK
        END
        IF &SUBSTR(1:4,&STR(&TOKEN)       ) = &STR(AST&STR(&LP))  THEN DO
           SET AST   = &SUBSTR(5:&EVAL(&LENGTH(&STR(&TOKEN))-1),&STR(&TOKEN)
           GOTO NXT_TOK
        END
        IF &SUBSTR(1,&TOKEN) = &STR(.) THEN DO
           IF &LABF = &STR() THEN DO
              SET LABF = &STR(&TOKEN)
              GOTO NXT_TOK
           END
           IF &STR(&LABL) = &STR() THEN DO
              SET LABL = &STR(&TOKEN)
              GOTO NXT_TOK
           END
          SET &ZEDSMSG = &STR(LABEL &STR(&TOKEN))
          SET &ZEDLMSG = &STR(EXACTLY TWO LABELS ARE REQUIRED FOUND   "&LABF", "
          ISPEXEC   SETMSG MSG(ISRZ000)
          EXIT CODE(12)
        END
        IF &STR(&TOKEN) = &STR()) THEN DO
           SET &ZEDSMSG = &STR(LOST PARENTHESIS)
           SET &ZEDLMSG = BLANKS SEPARATE ALL OPERANDS; THEREFORE INVALID IN FRO
           ISPEXEC SETMSG MSG(ISRZ000)
           EXIT CODE(12)
        END
        SET REMAIN = &STR(&REMAIN &STR(&TOKEN))
 NXT_TOK: -
        SET I = &I + 1
      END
 END_TOK: SET I = &I
      /*****************************************************************
        /*****************************************************************
        IF &STR(&REMAIN) ^= &STR() THEN DO
               SET &ZEDSMSG = &STR(UNKNOW -- &REMAIN.)
               SET &ZEDLMSG = &STR(PARAMETERS UNKNOWN -- &REMAIN.)
               ISPEXEC     SETMSG MSG(ISRZ000)
               EXIT CODE(12)
        END
        IF AST = &STR(&AST) THEN SET AST = &STR(*)
        IF &STR(&L) = &STR() THEN SET L = 6
        IF ENTIRE = &ENTIRE  | &STR(&LABL) = THEN DO      /************* LABELS
           IF &LABF = &STR() THEN DO
              SET LABF = .ZFIRST
              SET LABL = .ZLAST
           END
           ELSE DO
              SET &ZEDSMSG = &STR(LABEL CONFLICT)
              SET &ZEDLMSG = &STR("ENTIRE" IMPLIES .ZFIRST .ZLAST CONFLICTS WITH
              ISPEXEC     SETMSG MSG(ISRZ000)
              EXIT CODE(12)
           END
        END
        IF &LABL = &STR() THEN DO
              SET &ZEDSMSG = MISSING LABEL(S)
              SET &ZEDLMSG = &STR(&ZEDSMSG -- A PAIR OF LABELS OR "ENTIRE" IS RE
              ISPEXEC     SETMSG MSG(ISRZ000)
              EXIT CODE(12)
        END
        ISREDIT (#LABF) = LINENUM &LABF
        IF &LASTCC ^= 0 THEN DO
                   SET &ZEDSMSG = &STR(&LABF. LABEL)
                   SET &ZEDLMSG = &STR(&ZEDSMSG DOES NOT EXIST)
                   ISPEXEC     SETMSG MSG(ISRZ000)
                   EXIT CODE(12)
        END
        ISREDIT (#LABL) = LINENUM &LABL
        IF &LASTCC ^= 0 THEN DO
                   SET &ZEDSMSG = &STR(&LABL. LABEL)
                   SET &ZEDLMSG = &STR(&ZEDSMSG DOES NOT EXIST)
                   ISPEXEC     SETMSG MSG(ISRZ000)
                   EXIT CODE(12)
        END
        /********************************** END OF LABEL REQUIREMENTS **********
        ISREDIT (DWIDTH) = DATA_WIDTH
        SET DWIDTH2 = &DWIDTH + &DWIDTH     /* CAN BE USED TO FORCE AN ERROR */
        ISREDIT (LBOUND,RBOUND) = BOUNDS
        ISREDIT (VAR019,VAR020) = DISPLAY_COLS
        /****************************/
        ISREDIT (VAR057) = RECFM
        ISREDIT (VAR049,VAR050) = NUMBER
        SET LLBOUND = &LBOUND
        SET LLADJ = 0
        IF &VAR057 = V AND &VAR049 = ON THEN DO
           SET LLADJ = 8
           SET LLBOUND = &LBOUND + 8
        END
        /****************************/
        /************************************** CODE FOR  MANRLAB COMMANDS *****
        /************************************** CODE FOR  MANRLAB COMMANDS *****
        /************************************** CODE FOR  MANRLAB COMMANDS *****
        IF &LABL = &STR() THEN DO
              SET &ZEDSMSG = MISSING LABEL(S)
              SET &ZEDLMSG = &STR(&ZEDSMSG -- A PAIR OF LABELS OR "ENTIRE" IS RE
              ISPEXEC     SETMSG MSG(ISRZ000)
              EXIT CODE(12)
        END
    WRITE MANRLAB &LABF. &LABL. BEGIN(&BEGIN.) INCR(&INCR.)
    ISREDIT LINE_BEFORE &LABF = NOTELINE "MANRLAB &LABF. &LABL. BEGIN(&BEGIN.) I
    ISREDIT C ALL &LABF. &LABL. 1 P'##$##' '     '
    ISREDIT X ALL
    ISREDIT REMDUPS &LABF. &LABL. SEP 1 44
    ISREDIT @SEQ &LABF. &LABL. REPEATX COL(1) BEGIN(&BEGIN.) INCR(&INCR.) L(4) n
    ISREDIT REFORMAT &LABF. &LABL. 1 2 '.' 3 4 '-' 7 250
    ISREDIT x all    &LABF. &LABL.
    ISREDIT f all    &LABF. &LABL. 7 '====== remdups sep ======'
    ISREDIT del all  &LABF. &LABL. nx
    ISREDIT reset    &LABF. &LABF.
    ISREDIT reset    &LABL. &LABL.
