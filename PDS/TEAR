/* REXX -- Aid removal of MODIFY=TEAR in favor of OUTPUT statements*/
/* David McRitchie, "The REXX Macros Toolbox", Nov. 14, 1991*/
/*Do forever*/
Address "ISREDIT"
"MACRO (TOKEN)"
CAPS='ON'
"(CAPS)=CAPS"  /*will restore at exit*/
"caps off"  /*for msglines*/
token=translate(token) /*capitals*/
null=; /*easier to read later*/
tearcnt=0;copycnt=0
"reset SPE"
MSGBC="LINE_BEFORE .zcsr = msgline "
MSGB1="LINE_BEFORE 1 = msgline "
"(VAR014A) = DATA_CHANGED"
If VAR014A = "YES" then STRTWITH="S";else STRTWITH=""
"x 1 p'=' all";"f '//' 1 all";"x '//"||"*' 1 all"
"find first nx ' EXEC '"
"LABEL .zcsr = .top 0"
"SEEK all 'COPIES=' NX"
"(XX,COPYCNT)= SEEK_COUNTS"
"x 1 p'=' all";"f 1 '//' all"
"X all 1 '//"||"*'"; "find all word 'MODIFY=TEAR' nx"
"(XX,TEARCNT)= FIND_COUNTS"
tearcnt=tearcnt+0;copycnt=copycnt+0;
If tearcnt <> copycnt then
   "line_before .zf = msgline ""MODIFY=TEAR appears on",
   tearcnt " line(s), while COPIES= appears on" copycnt||""""
if TEARCNTS = 0 then do
   "find 'MODIFY=' all"
   "find 'COPIES=' all"
   "find ' OUTPUT ' all"
   "find 'OUTPUT=' all"
   msgb1 "'MODIFY=TEAR not found'"
   msgb1 "' There may be COPIES= internal to PROCs'"
   return(1)
end
/********** find modify=tear and/or copies= on output statements***/
"x ' ' all .zf .top";"f '//' 1 all .zf .top";
"x '//"||"*' 1 all .zf .top"
"find word  'OUTPUT' 5 23 .zf .top all nx"
"x all '//"||"*' 1 .zf .top"
"nxnx after(1) .zf .top"
"seek 'MODIFY=TEAR' all   nx .zf .top"
"(XX,OUT1CNT)= SEEK_COUNTS"
if OUT1CNT > 0 then "LINE_BEFORE .zf  = MSGLINE ""     ",
   "Warning " out1cnt "OUTPUT statment(s) contains MODIFY=TEAR"""
"seek all    'COPIES=' nx .zf .top"
"(XX,OUT2CNT)= SEEK_COUNTS"
if OUT2CNT > 0 then "LINE_BEFORE .zf  = MSGLINE ""     ",
   "Warning " out2cnt "OUTPUT statment(s) contains COPIES="""
/**************************************************/
"x ' ' all";"f '//' 1 all .top .zl";"x '//"||"*' 1 all"
"x all 5 22 ' OUTPUT ' "
highest = 0
DO COPIES = 1 TO 255 /* ACTUAL MAXIMUM IN JCL IS 128*/
      "FIND   FIRST NX WORD 'COPIES="||COPIES||"' "
      If rc = 0 then highest = copies
end
/************************************************/
/* MAY WANT TO CHECK FOR MAX OF 10 COPIES HERE  */
if highest > 30  then do
   "LINE_BEFORE .zf = MSGLINE ""Converion of COPIES=",
      ||highest||", to OUTPUT=  subparameters"""
   "LINE_BEFORE .zf = MSGLINE ""  will exceed !EDCHEK",
      "limit of 30 (actual JCL limit is 128)"
end
else if highest > 8  then do
   "LINE_BEFORE .zf  = MSGLINE ""COPIES="||,
        highest "-- messy warning above 8"""
end
/************************************************/
if highest < 2 then do
   /* use of modify=tear and copies irrelevant */
   "F FIRST 'COPIES=' NX"
   IF RC <> 0 THEN DO
     "F FIRST MODIFY=TEAR NX"
     IF RC <> 0 THEN DO
       VAR014A = ''
       "(VAR014A) = DATA_CHANGED"
       IF VAR014A <> "YES" THEN DO
         i = index(TOKEN,"NOLEAVE")
         if i = 0 then "CANCEL"
         RETURN(1)
       end
    END
  END
  "LINE_AFTER .ZF = MSGLINE ""- USE OF MODIFY=TEAR",
       "AND/OR COPIES= MAX OF "HIGHEST" IRRELEVANT"""
   "x ' ' all"
   call WRAPUP
   return(1)
end
/************************************************/
"x ' ' all";"f '//' 1 all";"x '//"||"*' 1 all"
COPIESX=(400)' ';
CHR=(400)' ';
Do COPIES = 1 to highest
   rcx=0
   fndx=0
   MAX5=0
   Find first ' '
   Do LN89 = 1 to 200 while rcx=0
      "FIND   FIRST  NX 'COPIES="||COPIES||"' WORD"
      rcx = rc
      if rcx = 0 then do
         CALL NOTECSR
         "CHANGE FIRST .ZCSR .ZCSR NX ',COPIES="||COPIES||"'   ''"
         "CHANGE FIRST .ZCSR .ZCSR NX WORD 'COPIES="||COPIES||"'   ''"
         ADDCOMMA = " "
         "FIND FIRST .ZCSR .ZCSR ', '"
         IF RC = 0 THEN ADDCOMMA = ", "
         ELSE DO;
            "change first  17 72 '  ' ', ' .zcsr .zcsr"
            "seek first ' ,' .zcsr .zcsr"
            if rc = 0 then "LINE_AFTER .zcsr = MSGLINE ",
               """---- comma INCORRECTLY added above," ,
                "or parameters must be merged  ----"""
            else "LINE_AFTER .zcsr = NOTELINE ",
                  "'---- comma added above ----'"
         end
         "LINE_AFTER .zcsr = '//"||"*****junk'"
         "(BEFORE) = linenum .zcsr"
         before = before + 1
         "LABEL" before "= .BEF"
         subcnt = 1;COPIESX='';prefix='OUTPUT=('
         do II = 1 to copies
            IF subcnt > 5 then do
              "LINE_BEFORE .BEF = DATALINE ""//             " ,
                  ||PREFIX||SUBSTR(COPIESX,2)||","""
              subcnt = 0;prefix = '';COPIESX='';
            end
            subcnt = subcnt + 1
            COPIESX=COPIESX||',*.COPY'||II
         end
         "LINE_BEFORE .BEF = DATALINE ""//             " ,
             ||PREFIX||SUBSTR(COPIESX,2)||')'||ADDCOMMA||""""
         "DEL .BEF .BEF all"
      END
      "Change all nx .zcsr .zcsr 'MODIFY=TEAR,'   ''"
      "Change all nx .zcsr .zcsr ',MODIFY=TEAR'   ''"
   end
End
Do copies = 1 to highest;if copies < 10 then dum=' ';else dum=''
   "LINE_BEFORE .top = dataline ""//COPY"||COPIES||DUM,
           ||"   OUTPUT GROUPID=COPY"||COPIES||""""
End
Call WRAPUP
Return(1)   /***** end of execute ***********/

NOTECSR: procedure;
   "(ORIG) = LINE .zcsr"
   "LINE_AFTER .zcsr = NOTELINE (ORIG)"
Return
WRAPUP:  procedure expose STRTWITH
  "find 'MODIFY=' all"
  "find 'COPIES=' all"
  "find ' OUTPUT ' all"
  "find 'OUTPUT=' all"
  "find 'MODIFY=' all"
  "FIND FIRST ' '"
   "(VAR014A) = DATA_CHANGED"
   If VAR014A = "YES" then Do
     "LINE_AFTER 0 = MSGLINE ",
      """=================== DATA-CHANGED=CHG ",
        ||"============================"||  STRTWITH||""""
     ZEDSMSG = "data changed"
     ZEDLMSG = "data changed -- save or cancel"
     Address "ISPEXEC" "SETMSG MSG(ISRZ000)"
   end
   if highest > 8  then do
      "LINE_BEFORE .top = NOTELINE ""COPIES="||,
           highest "-- messy warning above 8"""
   end
   "CAPS ON"  /* WORKING WITH JCL SO CAPS EVEN IF NOT REALLY*/
   "LOC 0"    /* UP MAX -- NOT ALLOWED IN AN INITIAL MACRO */
return
