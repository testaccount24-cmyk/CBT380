  PROC 1 Q PANEL() VGET() VPUT() SHARED() PROFILE() +
   PARM() PGM() CMD() NEWAPPL() WHAT NESTING EDIT
   /* PURPOSE: QUICK ENTRY INTO PANEL DISPLAY
   /* INSTALLATION: <SPECIAL INSTRUCTIONS, IF ANY, FOR USER TO INSTALL
   /* CONTRIBUTED:   F. David McRitchie             1986/07/14
   /* USER CONTACT:  F. David McRitchie            xx
   /* CODE MAINT.:   F. David McRitchie
   /********8 added line
 /*********************************************************************
 /*
 /*    QQQQQQQQQQ           HH      HH  EEEEEEEEE  LL        PPPPPPPP
 /*   QQ        QQ          HH      HH  EE         LL        PP     PP
 /*   QQ        QQ  =====   HHHHHHHHHH  EEEEE      LL        PPPPPPPP
 /*   QQ     QQ QQ          HH      HH  EE         LL        PP
 /*    QQQQQQQQQQQ          HH      HH  EEEEEEEEE  LLLLLLLL  PP
 /*             QQQQQ
 /*  EXAMPLES:
 /*     ==> TSO Q *choose*
 /*
 /*  +-------------------------------------------------------------+.
 /*  | TSO Q option      (choose single choice option below)       |
 /*  +-------------------------------------------------------------+.
 /*  | ACTIVATOR   DATASET     LIBRARY     RESET       TERMINAL    |
 /*  | BATCH       DIALOG      LMU         SEARCH      TSO         |
 /*  |                                     SEARCH4                 |
 /*  | BROWSE      DMS         LOG         SOP         TUTORIAL    |
 /*  | CHANGES     DSLIST      NAMES       SUPERC      UTILITIES   |
 /*  | COMMAND     EDIT        OPT         SUPERCE     space       |
 /*  | COMPRESS    FOREGROUND  PSAF        TECHPRIM                |
 /*  | COPY        INFO        Q           TECHSUPP                |
 /*  |             INLOG                                           |
 /*  +-------------------------------------------------------------+.
 /*  EDIT option meaningful only to INLOG
 /*
 /*  +-------------------------------------------------------------+.
 /*  | WHAT       shows &ZAPPLID  and browse &DSNAME               |
 /*  +-------------------------------------------------------------+.
 /*
 /*     ==> TSO Q TLMS    /* quick entry to %TLMSUSR  */
 /*
 /*     ==> TSO Q SELECT PANEL(XXX) | PGM(XXXX) | CMD(XXX)   PARM(XXX)
 /*                  | NEWAPPL(XXX)
 /*
 /*     ==> TSO Q VPUT(PENCIL) SHARED(PEN2)    ==> TSO Q VGET(PENCIL)
 /*  Browse down to see more specific information
 /*  THIS IS THE ONLY COPY   OF  VGET   DISPLAY AVAILABLE
 /*   E.G.   COMMAND ===> TSO Q * VPUT(PEN2) SHARED(SHR-X) ...
 /*     ===> TSO Q * VPUT(PEN2) SHARED(SHR-X) PROFILE(PRO-X) VGET(*)
 /*********************************************************************
  SET Q   = &STR(&SYSCAPS(&STR(&Q)))
  SET Q   = &STR(&SYSCAPS(&STR(&Q)))
  SET LP = &STR((
  SET RP = )
  IF &STR(&Q.) = HELP THEN DO
     CLIST Q
     EXIT CODE(1)
  END
  /********* EFFECTIVELY MAKES  ARGUMENT  "Q"  OPTIONAL  ************
  IF &SUBSTR(1:5,&STR(&Q)           ) = &STR(VGET&STR(&LP))  THEN DO
     SET VGET = &SUBSTR(6:&EVAL(&LENGTH(&STR(&Q))-1),&STR(&Q)                 )
     SET Q = &STR(*)
     GOTO NXT_TOK
  END
  IF &SUBSTR(1:5,&STR(&Q)           ) = &STR(VPUT&STR(&LP))  THEN DO
     SET VPUT = &SUBSTR(6:&EVAL(&LENGTH(&STR(&Q))-1),&STR(&Q)                 )
     SET Q = &STR(*)
     GOTO NXT_TOK
  END
  IF &SUBSTR(1:6,&STR(&Q)           ) = &STR(PANEL&STR(&LP))  THEN DO
     SET PANEL = &SUBSTR(7:&EVAL(&LENGTH(&STR(&Q))-1),&STR(&Q)                 )
     SET Q = &STR(*)
     GOTO NXT_TOK
  END
  IF &SUBSTR(1:7,&STR(&Q)           ) = &STR(SHARED&STR(&LP))  THEN DO
     /******* following line may be incorrect-- changed from PANEL ??? */
     SET SHARED = &SUBSTR(8:&EVAL(&LENGTH(&STR(&Q))-1),&STR(&Q)
     SET Q = &STR(*)
     GOTO NXT_TOK
  END
  IF &SUBSTR(1:8,&STR(&Q)           ) = &STR(PROFILE&STR(&LP))  THEN DO
     SET PROFILE = &SUBSTR(9:&EVAL(&LENGTH(&STR(&Q))-1),&STR(&Q)
     SET Q = &STR(*)
     GOTO NXT_TOK
  END
  /******************************************************************
  NXT_TOK: -
   IF &STR(&Q) = &STR(TSOOS2) | &STR(&Q) = &STR(OS2) THEN DO
      %TSOOS2
      EXIT CODE(&LASTCC.)
   END
  IF &STR(&Q) ^= &STR(*) THEN DO
     IF &STR(&Q) = TECHPRIM  THEN  SET PANEL = ISP@MSTR

     IF &STR(&Q) = TERMINAL  THEN  ISPEXEC SELECT PGM(ISPOPT) PARM(ISPOPT1)

     /*  use the   KEYS   command from any ispf panel .........



/*   IF &STR(&Q) = PDF       THEN  SET PANEL = ISR@PRIM
/*   IF &STR(&Q) = PDF       THEN  ISPEXEC SELECT PGM(ISR@PRIM)
     IF &STR(&Q) = OPT       THEN  ISPEXEC SELECT PANEL(ISPOPTA)
     IF &STR(&Q) = CHANGES   THEN  ISPEXEC SELECT PGM(ISPTUTOR) PARM(ISR00005)
     IF &STR(&Q) = TUTORIAL  THEN  ISPEXEC SELECT PGM(ISPTUTOR) PARM(ISR00000)
                   /* 6. PACKAGES  VUT@PRIM
     IF &STR(&Q) = TECHSUPP  THEN  SET PANEL = VST@PRIM
     IF &STR(&Q) = INFO      THEN ISPEXEC SELECT PANEL(ICQGCM00) NEWAPPL(ICQ)
     IF &STR(&Q) = PSAF      THEN ISPEXEC SELECT CMD(AFPRINT ISPF(P))
     IF &STR(&Q) = NAMES     THEN SET CMD      = &STR(%ICQCAC00)
     IF &STR(&Q) = BROWSE    THEN  ISPEXEC SELECT PGM(ISRBRO) PARM(ISRBRO01)
     IF &STR(&Q) = EDIT      THEN  ISPEXEC SELECT PGM(ISREDIT) PARM(P,ISREDM01)
     IF &STR(&Q) = UTILITIES THEN  ISPEXEC SELECT PANEL(ISRUTIL)
     IF &STR(&Q) = COMPRESS | &STR(&Q) = LIBRARY THEN -
            ISPEXEC SELECT PGM(ISRUDA) PARM(ISRUDA1)
     IF &STR(&Q) = DATASET   THEN ISPEXEC SELECT PGM(ISRUDA) PARM(ISRUDA2)
     IF &STR(&Q) = COPY      THEN ISPEXEC SELECT PGM(ISRUMC)
     IF &STR(&Q) = DSLIST    THEN ISPEXEC SELECT PGM(ISRUDL) PARM(ISRUDLP)
     IF &STR(&Q) = RESET     THEN ISPEXEC SELECT PGM(ISRURS)
     IF &STR(&Q) = WHAT  | &STR(&WHAT) = WHAT THEN DO
           CLS
           WRITE USERID=&SYSUID. AT &SYSSDATE. &SYSTIME.  +
               PREFIX=&SYSPREF.  PROC=&SYSPROC. NEST=&SYSNEST.
           ISPEXEC   VGET  DSNAME  SHARED
           WRITE &DSNAME. <=== VALUE OF SHARED &&DSNAME.
           ISPEXEC VGET VSTSRVTI SHARED
           WRITE &VSTSRVTI. <=== VALUE OF SHARE &&VSTSRVTI.
           ISPEXEC VGET ZAPPLID SHARED
           WRITE &ZAPPLID. <=== VALUE OF SHARE &&ZAPPLID.
     END





     IF &STR(&Q) = SUPERC    THEN ISPEXEC SELECT PGM(ISRSSM)
     IF &STR(&Q) = SUPERCE   THEN ISPEXEC SELECT PGM(ISRSEPRM) NOCHECK
     IF &STR(&Q) = SEARCH    THEN DO
                                  ISPEXEC SELECT PGM(ISRSFM)
                             END
     IF &STR(&Q) = SEARCH4   THEN DO
                                  ISPEXEC SELECT PGM(ISRSFM)
                                  SRCH400
                             END
     IF &STR(&Q) = FOREGROUND THEN  ISPEXEC SELECT PGM(ISRFPA)
     IF &STR(&Q) = FORGROUND THEN  WRITE FORGROUND IS SPELLED FOREGROUND TRY AGA










      IF &STR(&Q) = BATCH     THEN  ISPEXEC SELECT PGM(ISRJB1) PARM(ISRJPA) NOCH







     IF &STR(&Q) = COMMAND   THEN  ISPEXEC SELECT PGM(ISRPTC)
     IF &STR(&Q) = TSO       THEN  ISPEXEC SELECT PGM(ISRPTC)
     IF &STR(&Q) = DIALOG    THEN  ISPEXEC SELECT PGM(ISPYXDR) NOCHECK PARM(ISR)
     IF &STR(&Q) = PANELS    THEN  ISPEXEC SELECT PGM(ISPYXDR) NOCHECK PARM(ISR)
     IF &STR(&Q) = VAR       THEN DO
         ISPEXEC VGET ZAPPLID SHARED
         IF &STR() = &STR(&PARM.) THEN SET PARM = ISR
         IF &PARM. NE &ZAPPLID. OR &PARM. NE ISR THEN DO
            WRITE CURRENT VALUE OF PARM(&ZAPPLID.)
            WRITE CURRENT VALUE OF PARM(&ZAPPLID.)  WILL USE   PARM(&PARM.)
         END
                                   ISPEXEC SELECT PGM(ISPYXDR) NOCHECK PARM(&PAR
     END
     IF &STR(&Q) = LOG       THEN  ISPEXEC SELECT PGM(ISPYXDR) NOCHECK   /* SORR
     IF &STR(&Q) = LMU       THEN  ISPEXEC SELECT PANEL(ISRLPRIM)

     /* normally from edit use PDF  =4.9   (2.4.9)










     IF &STR(&Q) = DMS       THEN -
                   ISPEXEC SELECT CMD(%DMS) NEWAPPL(DMS)
 /*  IF &STR(&Q) = DMSLIST   THEN ISPEXEC SELECT PGM(DMS009E)










     IF &STR(&Q) = SOP       THEN  ISPEXEC SELECT PANEL(VUTSOP) NEWAPPL(VSOP)










     IF &STR(&Q) = SPACE  THEN -
        ISPEXEC SELECT CMD(%ISMF) NEWAPPL(DGT) NOCHECK


 /*  use   ==> TSO SOP VIEW    instead
 /*  IF &STR(&Q) = TECHSOP   THEN  ISPEXEC SELECT PANEL(VSTSOP) NEWAPPL(VSOP)
     IF &STR(&Q) = ACTIVATE | &STR(&Q) = ACTIVATOR THEN -
        ISPEXEC SELECT CMD(%ACTIVATE) NEWAPPL(CACT)
  END
     IF &STR(&Q) = INLOG     THEN  DO
        IF EDIT = &EDIT THEN $EDIT TECH.LIBR.PROJ(INLOG)
        ELSE $BROWSE TECH.LIBR.PROJ(INLOG)
        EXIT CODE(&LASTCC.)
     END
  IF &STR(&Q) = &STR(TLMS) THEN DO
     WRITE Use "END" to TERMINATE your TLMS session
     %TLMSUSR
     EXIT CODE(0)
  END
  IF &STR(&VPUT) ^= &STR()     THEN DO    /* EXAMPLE   ==> TSO Q * VGET(ZPF13)
                                          /*           ==> TSO Q * VPUT(PENCIL)
                                          /*           ==> TSO Q * VPUT(PENCIL)
       ALLOCATE FI(OUTFILE) DS(LIBR.CLIST(VPUT@1)) SHR REUSE
       OPENFILE OUTFILE OUTPUT
       SET OUTFILE = &STR( PROC 0)
       PUTFILE OUTFILE
       SET OUTFILE = &STR(/)&STR(*  THIS MEMBER --VPUT@1 -- WAS CREATED BY CLIST
       PUTFILE OUTFILE
       SET OUTFILE = &STR(/)&STR(*  &SYSICMD. *  VPUT(&VPUT.) SHARED(&STR(&SHARE
       PUTFILE OUTFILE
       IF &STR(&PROFILE) ^= &STR() THEN DO
          SET OUTFILE = &STR(SET &STR(&VPUT) = &&STR(&PROFILE))
          PUTFILE OUTFILE
          SET OUTFILE = &STR(ISPEXEC VPUT (&STR(&VPUT)) PROFILE)
          PUTFILE OUTFILE
       END
       IF &STR(&SHARED) ^= &STR() THEN DO
          SET OUTFILE = &STR(SET &STR(&VPUT) = &&STR(&SHARED))
          PUTFILE OUTFILE
          SET OUTFILE = &STR(ISPEXEC VPUT (&STR(&VPUT)) SHARED)
          PUTFILE OUTFILE
       END
       CLOSFILE OUTFILE
       FREE FI(OUTFILE)
       %VPUT@1
       IF &STR(&VPUT) = THEN -
       EXIT CODE(&LASTCC)
  END
  IF &STR(&VGET) ^= &STR()     THEN DO    /* EXAMPLE   ==> TSO Q * VGET(ZPF13)
       IF &STR(&VGET) = &STR(*) THEN SET VGET = &STR(&VPUT)
       ALLOCATE FI(OUTFILE) DS(LIBR.CLIST(VGET@1)) SHR REUSE
       OPENFILE OUTFILE OUTPUT
       SET OUTFILE = &STR( PROC 0)
       PUTFILE OUTFILE
       SET OUTFILE = &STR(/)&STR(*  THIS MEMBER --VGET@1 -- WAS CREATED BY CLIST
       PUTFILE OUTFILE
       SET OUTFILE = &STR(/)&STR(*  &SYSICMD. * VGET(&VGET.) VPUT(&VPUT.) SHARED
       PUTFILE OUTFILE
       SET OUTFILE = &STR(ISPEXEC VGET (&STR(&VGET)) SHARED)
       PUTFILE OUTFILE
       SET OUTFILE = &STR(SET SHARED1 = &&STR(&&&VGET.&RP.
       PUTFILE OUTFILE
       SET OUTFILE = &STR(WRITE  SHARED  VALUE &VGET = &&STR(&&&VGET.)
       PUTFILE OUTFILE
       SET OUTFILE = &STR(ISPEXEC VGET (&STR(&VGET)) PROFILE)
       PUTFILE OUTFILE
       SET OUTFILE = &STR(WRITE  PROFILE VALUE &VGET = &&STR(&&&VGET.)
       PUTFILE OUTFILE
       SET OUTFILE = &STR(IF &&STR(&&SHARED1) ^= &&STR() THEN DO
       PUTFILE OUTFILE
       SET OUTFILE = &STR(     SET &VGET = &&STR(&&SHARED1)
       PUTFILE OUTFILE
       SET OUTFILE = &STR(     ISPEXEC VPUT (&VGET) SHARED
       PUTFILE OUTFILE
       SET OUTFILE = &STR(     WRITE &VGET VALUE "&STR(&&)SHARED1" IN SHARED POO
       PUTFILE OUTFILE
       SET OUTFILE = &STR(     WRITE TO PREVENT LOSS WHICH WOULD OTHERWISE OCCUR
       PUTFILE OUTFILE
       SET OUTFILE = &STR(END)
       PUTFILE OUTFILE
       CLOSFILE OUTFILE
       FREE FI(OUTFILE)
       %VGET@1
       EXIT CODE(&LASTCC)
  END
  IF &STR(&Q) = SELECT THEN DO
     IF &STR(&PARM.)    ^= &STR() THEN SET PARM    = &STR(PARM&LP.&PARM.&RP.)
     IF &STR(&PGM.)     ^= &STR() THEN SET PGM     = &STR(PGM&LP.&PGM.&RP.)
     IF &STR(&CMD)      ^= &STR() THEN SET CMD     = &STR(CMD&LP.&CMD.&RP.)
     IF &STR(&PANEL.)   ^= &STR() THEN SET PANEL   = &STR(PANEL&LP.&PANEL.&RP.)
     IF &STR(&NEWAPPL.) ^= &STR() THEN SET NEWAPPL = &STR(NEWAPPL&LP.&NEWAPPL.&R
     IF &STR(&NEWPOOL.) ^= &STR() THEN SET NEWPOOL = &STR(NEWPOOL&LP.&NEWPOOL.&R
     WRITE  ISPEXEC SELECT &PANEL &CMD &PGM &PARM. &NEWAPPL. nesting
     WRITE  IF ACCEPTABLE HIT ENTER
     IF READ = &STR(Q.) THEN DO
       READ XXX
       IF &STR() ^= &STR(&XXX.) THEN EXIT CODE(12)
     END
     ISPEXEC SELECT &PANEL &CMD &PGM &PARM. &NEWAPPL. &NESTING
     EXIT CODE(0)
  END
  IF &STR(&CMD) ^= &STR() THEN DO
     ISPEXEC SELECT CMD(&CMD)
     EXIT CODE(0)
  END
  IF &STR(&PANEL) ^= &STR() THEN DO
     ISPEXEC SELECT PANEL(&PANEL)
     EXIT CODE(0)
  END
