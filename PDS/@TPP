/* REXX -- Converted to REXX 1994/06/02                             */
ADDRESS "ISREDIT"
  "MACRO (ADD1 ADD2 ADD3 ADD4)"
  /* CONTRIBUTED: DAVID MCRITCHIE  1987/08/06                        */
  /* THIS CLIST WILL IDENTIFY ALL  NX "^" AND CREATE                 */
  /* A LINE  ".TPP VALA VALA VALA VALA"                              */
  /* FOR USE IN SOP MANUAL                                           */
  /* FOR USE ONLY WITH MEMBERS NOT ALREADY SET UP TO USE TABS.       */
  /* */
  /* THIS CLIST IS DESCRIBED IN IS03.SHARE.TEXT(@TPP)                */
  /*                     AND IN IS03.SHARE.TEXT(STAFF)               */
  /* */
  /* TECH.LIBR2.TEXT(FRAME)   .IM FRAME                              */
  /*       WILL CONVERT  .TPP 5 10 15 20 25 30                       */
  /* */
  /* TO EQUIVALENT OF    .TP  5 10 15 20 25 30                       */
  /* AND                .IF 38PP = &$PDEV  .TP 5M 10M 15, 20M 25M 30M*/
  /* */
  /* USEFUL HINTS                                                    */
  /*  UP A PFKEY  4 = "=>"  F '   '\C '   ' '  ^'                    */
  /*  THEN DO     ==> @TPP    OR    @TPP 0 5                         */
  /*              ==> X ALL                                          */
  /*              ==> F .TPP 1 ALL                                   */
  /*              ==> REMDUPS NX                                     */
  add1 = 0; add2=0; add3=0; add4=0; cp12=0;cpxx=0;add4=0
  vala="";valb=""; nn=0
 IF ADD3 = 0 THEN  ADD3 = ADD1  + 1
 IF ADD4 = 0 THEN  ADD4 = ADD2
 "LOC 0"
 "Exclude ALL '.' 1"
 "Find first '^'"
 AGAIN: ,
 VALA = ""
 "Find FIRST .ZCSR .ZCSR '^'"
 IF rc \= 0   THEN  signal DONE
 VALA = ""
 VALB = ""
 CONTND: ,
 "(CP11,CP12) = CURSOR"
 CPXX = CP12
 IF ADD2 \= 0 THEN CP12 = CP12 / ADD2
 CP12 = CPXX  + ADD1
 VALA = VALA  CP12
 IF ADD4 \= 0 THEN CP12 = CPXX / ADD4
 CP12 = CPXX  + ADD3
 VALB = VALB  CP12
 "Find NEXT  .ZCSR .ZCSR '^'"
 IF rc = 0 THEN  signal CONTND
 DONE: IF VALA \= "" THEN
     "LINE_BEFORE .ZCSR = DATALINE "".TPP" VALA";.IF SYSOUT ne ",
      "PRINT .TPP" valb""""
 NN = NN  + 1
 DONEBEG:
 "Find NEXT '^' NX"
 IF rc = 0  THEN  signal AGAIN
 "LINE_BEFORE .ZFIRST = NOTELINE ""Fix up is required, .TPP",
     "must be changed to .TP or make up a .TPP macro"""
 "LINE_BEFORE .ZFIRST = NOTELINE ""@TPP INVOKED" time('n') "AND",
     "ADDED" NN ".TPP  LINES """
 "LINE_BEFORE .ZFIRST = NOTELINE ""  IN FRONT OF  DISPLAYED",
     "LINES CONTAINING TABS '^'"""
 "LINE_BEFORE .ZFIRST = DATALINE "".*"  date("u") time("n"),
    "@TPP" ADD1 ADD2 ADD3 ADD4 """"
